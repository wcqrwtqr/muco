from django.shortcuts import renderfrom django.views.generic import ListView, DetailView, CreateView, DeleteView, UpdateViewfrom equipmentList.models import equipmentdbfrom equipmenMaintenance.models import Maintenancedbfrom equipmentList.forms import EquipmentFormfrom django.contrib.auth.mixins import PermissionRequiredMixinfrom django.contrib.messages.views import SuccessMessageMixinfrom django.urls import reverse_lazyclass EquipmentListView(ListView):    template_name = 'equipmentList/equipment_page.html'    model = equipmentdb # new    queryset = equipmentdb.objects.all()class EquipmentDetailView(DetailView):    template_name = 'equipmentList/equipment_detail.html'    queryset = equipmentdb.objects.all()    context_object_name = 'equipment_detail'    def get_context_data(self, **kwargs):        context = super().get_context_data(**kwargs)        mypk = self.kwargs['pk'] # this will get the pk for the asset        context['equipMain'] = Maintenancedb.objects.filter(asset=mypk)        return contextclass EquipmentUpdateView(SuccessMessageMixin,UpdateView):    model = equipmentdb    fields = '__all__'    template_name = 'equipmentList/equipment_update.html'    success_message = "%(serial_num)s Asset was deleted successfully"    success_url = reverse_lazy('equipment')class EquipmentCreateView(PermissionRequiredMixin,SuccessMessageMixin, CreateView):    permission_required = ("is_superuser")    template_name = 'equipmentList/equipment_new.html'    form_class = EquipmentForm    model = equipmentdb    success_message = "New Asset was created successfully"    success_url = reverse_lazy('equipment')    def from_valid(self,form):        '''        Validate the form before saving        '''        self.object = form.save(commit = True)        self.object = save()        return super().form_valid(form)class EquipmentDeleteView(PermissionRequiredMixin,SuccessMessageMixin, DeleteView):    permission_required = ("is_superuser", )    model = equipmentdb    success_url = reverse_lazy('equipment')    success_message = "Asset was deleted successfully"    template_name = 'equipmentList/equipment_confirm_delete.html'